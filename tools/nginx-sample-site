# This example uses certbot and letsencrypt SSL certificates
# Adjust this file accordingly if you employ a different SSL service.
# Also adjust the hostname by replacing YOUR-HOSTNAME.TLD with the appropriate one

# HTTP Redirection Server
server {
        if ($host = www.YOUR-HOSTNAME.TLD) {
                return 301 https://$host$request_uri;
        } # managed by Certbot

        if ($host = YOUR-HOSTNAME.TLD) {
                return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80 ;
        listen [::]:80 ;
        server_name www.YOUR-HOSTNAME.TLD YOUR-HOSTNAME.TLD;
        return 404; # managed by Certbot

}

# HTTPS Application Proxy
server {

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name www.YOUR-HOSTNAME.TLD YOUR-HOSTNAME.TLD; # managed by Certbot

        listen [::]:443 ssl; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/****;           # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/***;        # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # managed by Certbot

        # Use same error page for 502 and 504
        error_page 502 504 /504.html;
        location = /504.html {
            root /var/www/error/;
            #internal;
        }

        # Allow access to images for error-pages served by nginx
        location /error-page-resources {
            root /var/www/error/;
            #internal;
        }

        location /admin {
                allow 127.0.0.1;
                deny all;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404
                proxy_pass http://localhost:8000;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # WebSocket support (nginx 1.4)
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection upgrade;
                # try_files $uri $uri/ =404;
        }
}
